"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/apollo/bookmarks.ts":
/*!*********************************!*\
  !*** ./src/apollo/bookmarks.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GET_BOOKMARKS\": function() { return /* binding */ GET_BOOKMARKS; },\n/* harmony export */   \"bookmarksVar\": function() { return /* binding */ bookmarksVar; },\n/* harmony export */   \"toggleBookmark\": function() { return /* binding */ toggleBookmark; }\n/* harmony export */ });\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\n\n/*** User bookmarks*/\nconst KEY = 'bookmarks';\nconst GET_BOOKMARKS = _apollo_client__WEBPACK_IMPORTED_MODULE_0__.gql`\n    query GetAllTodos {\n        bookmarks @client\n    }\n`;\nconst bookmarksVar = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_0__.makeVar)(persistentRead()); // Change bookmarks list\n\nconst toggleBookmark = card => {\n  const bookmarks = bookmarksVar();\n\n  if (!bookmarks.find(el => el.id === card.id)) {\n    bookmarksVar([...bookmarks, card]);\n  } else {\n    bookmarksVar(bookmarks.filter(el => el.id !== card.id));\n  }\n\n  persistentWrite();\n}; // Local Storage\n\nfunction persistentWrite() {\n  const bookmarks = bookmarksVar();\n  window.localStorage.setItem(KEY, JSON.stringify(bookmarks));\n}\n\nfunction persistentRead() {\n  try {\n    const item = window.localStorage.getItem(KEY);\n\n    if (item) {\n      return JSON.parse(item);\n    }\n  } catch (err) {\n    console.error('Localstorage parsing error', err);\n  }\n\n  return [];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBvbGxvL2Jvb2ttYXJrcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBSUE7QUFFQSxNQUFNRSxHQUFHLEdBQUcsV0FBWjtBQUVPLE1BQU1DLGFBQWEsR0FBR0gsK0NBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0EsQ0FKTztBQU1BLE1BQU1JLFlBQWtDLEdBQUdILHVEQUFPLENBQ3JESSxjQUFjLEVBRHVDLENBQWxELEVBSVA7O0FBQ08sTUFBTUMsY0FBYyxHQUFJQyxJQUFELElBQWlCO0VBQzNDLE1BQU1DLFNBQVMsR0FBR0osWUFBWSxFQUE5Qjs7RUFFQSxJQUFJLENBQUNJLFNBQVMsQ0FBQ0MsSUFBVixDQUFlQyxFQUFFLElBQUlBLEVBQUUsQ0FBQ0MsRUFBSCxLQUFVSixJQUFJLENBQUNJLEVBQXBDLENBQUwsRUFBOEM7SUFDMUNQLFlBQVksQ0FBQyxDQUFDLEdBQUdJLFNBQUosRUFBZUQsSUFBZixDQUFELENBQVo7RUFDSCxDQUZELE1BRU87SUFDSEgsWUFBWSxDQUFDSSxTQUFTLENBQUNJLE1BQVYsQ0FBaUJGLEVBQUUsSUFBSUEsRUFBRSxDQUFDQyxFQUFILEtBQVVKLElBQUksQ0FBQ0ksRUFBdEMsQ0FBRCxDQUFaO0VBQ0g7O0VBRURFLGVBQWU7QUFDbEIsQ0FWTSxFQVlQOztBQUNBLFNBQVNBLGVBQVQsR0FBMkI7RUFDdkIsTUFBTUwsU0FBUyxHQUFHSixZQUFZLEVBQTlCO0VBQ0FVLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQkMsT0FBcEIsQ0FBNEJkLEdBQTVCLEVBQWlDZSxJQUFJLENBQUNDLFNBQUwsQ0FBZVYsU0FBZixDQUFqQztBQUNIOztBQUVELFNBQVNILGNBQVQsR0FBMEI7RUFDdEIsSUFBSTtJQUNBLE1BQU1jLElBQUksR0FBR0wsTUFBTSxDQUFDQyxZQUFQLENBQW9CSyxPQUFwQixDQUE0QmxCLEdBQTVCLENBQWI7O0lBQ0EsSUFBSWlCLElBQUosRUFBVTtNQUNOLE9BQU9GLElBQUksQ0FBQ0ksS0FBTCxDQUFXRixJQUFYLENBQVA7SUFDSDtFQUNKLENBTEQsQ0FLQyxPQUFPRyxHQUFQLEVBQVk7SUFDVEMsT0FBTyxDQUFDQyxLQUFSLENBQWMsNEJBQWQsRUFBNENGLEdBQTVDO0VBQ0g7O0VBRUQsT0FBTyxFQUFQO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2Fwb2xsby9ib29rbWFya3MudHM/YWRlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwsIG1ha2VWYXIsIFJlYWN0aXZlVmFyIH0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xyXG5pbXBvcnQgYm9va21hcmtzIGZyb20gJy4uLy4uL3BhZ2VzL2Jvb2ttYXJrcyc7XHJcbmltcG9ydCB7IENhcmRJIH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkSXRlbSc7XHJcblxyXG4vKioqIFVzZXIgYm9va21hcmtzKi9cclxuXHJcbmNvbnN0IEtFWSA9ICdib29rbWFya3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9CT09LTUFSS1MgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRBbGxUb2RvcyB7XHJcbiAgICAgICAgYm9va21hcmtzIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBib29rbWFya3NWYXI6IFJlYWN0aXZlVmFyPENhcmRJW10+ID0gbWFrZVZhcjxDYXJkSVtdPihcclxuICAgIHBlcnNpc3RlbnRSZWFkKClcclxuKTtcclxuXHJcbi8vIENoYW5nZSBib29rbWFya3MgbGlzdFxyXG5leHBvcnQgY29uc3QgdG9nZ2xlQm9va21hcmsgPSAoY2FyZDogQ2FyZEkpID0+IHtcclxuICAgIGNvbnN0IGJvb2ttYXJrcyA9IGJvb2ttYXJrc1ZhcigpO1xyXG5cclxuICAgIGlmICghYm9va21hcmtzLmZpbmQoZWwgPT4gZWwuaWQgPT09IGNhcmQuaWQpKSB7XHJcbiAgICAgICAgYm9va21hcmtzVmFyKFsuLi5ib29rbWFya3MsIGNhcmRdKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBib29rbWFya3NWYXIoYm9va21hcmtzLmZpbHRlcihlbCA9PiBlbC5pZCAhPT0gY2FyZC5pZCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHBlcnNpc3RlbnRXcml0ZSgpO1xyXG59XHJcblxyXG4vLyBMb2NhbCBTdG9yYWdlXHJcbmZ1bmN0aW9uIHBlcnNpc3RlbnRXcml0ZSgpIHtcclxuICAgIGNvbnN0IGJvb2ttYXJrcyA9IGJvb2ttYXJrc1ZhcigpO1xyXG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKEtFWSwgSlNPTi5zdHJpbmdpZnkoYm9va21hcmtzKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBlcnNpc3RlbnRSZWFkKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBpdGVtID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKEtFWSk7XHJcbiAgICAgICAgaWYgKGl0ZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoaXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfWNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdMb2NhbHN0b3JhZ2UgcGFyc2luZyBlcnJvcicsIGVycik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFtdO1xyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiZ3FsIiwibWFrZVZhciIsIktFWSIsIkdFVF9CT09LTUFSS1MiLCJib29rbWFya3NWYXIiLCJwZXJzaXN0ZW50UmVhZCIsInRvZ2dsZUJvb2ttYXJrIiwiY2FyZCIsImJvb2ttYXJrcyIsImZpbmQiLCJlbCIsImlkIiwiZmlsdGVyIiwicGVyc2lzdGVudFdyaXRlIiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpdGVtIiwiZ2V0SXRlbSIsInBhcnNlIiwiZXJyIiwiY29uc29sZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/apollo/bookmarks.ts\n"));

/***/ })

});